digraph "blocks2.rb" {
subgraph "cluster_::Foo#bar" {
    label = "::Foo#bar";
    color = blue;
    "bb::Foo#bar_0" [shape = invhouse];
    "bb::Foo#bar_1" [shape = parallelogram];

    "bb::Foo#bar_0" [
        label = "block[id=0]()\l<self>: Foo = cast(<self>: NilClass, Foo);\l<blk>: T.untyped = load_arg(<blk>)\l<statTemp>$4: Integer(1) = 1\l<returnMethodTemp>$2: T.untyped = <blk>: T.untyped.call(<statTemp>$4: Integer(1))\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Foo#bar_0" -> "bb::Foo#bar_1" [style="bold"];
    "bb::Foo#bar_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Foo#bar_1" -> "bb::Foo#bar_1" [style="bold"];
}

subgraph "cluster_::Foo#baz" {
    label = "::Foo#baz";
    color = blue;
    "bb::Foo#baz_0" [shape = invhouse];
    "bb::Foo#baz_1" [shape = parallelogram];

    "bb::Foo#baz_0" [
        label = "block[id=0]()\l<self>: Foo = cast(<self>: NilClass, Foo);\l<block-pre-call-temp>$4: T.untyped = <self>: Foo.bar()\l<selfRestore>$5: Foo = <self>\l<unconditional>\l"
    ];

    "bb::Foo#baz_0" -> "bb::Foo#baz_2" [style="bold"];
    "bb::Foo#baz_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Foo#baz_1" -> "bb::Foo#baz_1" [style="bold"];
    "bb::Foo#baz_2" [
        label = "block[id=2](<self>: Foo, <selfRestore>$5: Foo)\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Foo#baz_2" -> "bb::Foo#baz_5" [style="bold"];
    "bb::Foo#baz_2" -> "bb::Foo#baz_3" [style="tapered"];

    "bb::Foo#baz_3" [
        label = "block[id=3](<selfRestore>$5: Foo)\l<returnMethodTemp>$2: T.untyped = Solve<bar>\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Foo#baz_3" -> "bb::Foo#baz_1" [style="bold"];
    "bb::Foo#baz_5" [
        label = "block[id=5](<self>: Foo, <selfRestore>$5: Foo)\louterLoops: 1\l<self>: Foo = loadSelf\l<blk>$6: T.untyped = load_yield_params(bar)\l<blk>$7: Integer(0) = 0\lr$1: T.untyped = <blk>$6: T.untyped.[](<blk>$7: Integer(0))\l<blockReturnTemp>$8: NilClass = <self>: Foo.puts(r$1: T.untyped)\l<blockReturnTemp>$11: T.noreturn = blockreturn<bar> <blockReturnTemp>$8: NilClass\l<unconditional>\l"
    ];

    "bb::Foo#baz_5" -> "bb::Foo#baz_2" [style="bold"];
}

}

